#-----------------------------------------------------------
# Vivado v2022.2 (64-bit)
# SW Build 3671981 on Fri Oct 14 04:59:54 MDT 2022
# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
# Start of session at: Thu Apr 27 02:52:40 2023
# Process ID: 132329
# Current directory: /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1
# Command line: vivado -log tdoa.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source tdoa.tcl -notrace
# Log file: /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa.vdi
# Journal file: /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/vivado.jou
# Running On: theo-ubuntu, OS: Linux, CPU Frequency: 2592.000 MHz, CPU Physical cores: 2, Host memory: 8328 MB
#-----------------------------------------------------------
source tdoa.tcl -notrace
create_project: Time (s): cpu = 00:00:10 ; elapsed = 00:00:13 . Memory (MB): peak = 1325.102 ; gain = 0.023 ; free physical = 1263 ; free virtual = 2923
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository '/media/psf/TAUV-Playground/zybo-z7-tdoa/ip_repo/axi_xadc_sampler_1_0'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/media/psf/TAUV-Playground/zybo-z7-tdoa/ip_repo/axi_fsk_sdft_1_0'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/media/psf/TAUV-Playground/zybo-z7-tdoa/ip_repo/axi_channel_demux'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/media/psf/TAUV-Playground/zybo-z7-tdoa/ip_repo/axi_fsk_demod'.
INFO: [IP_Flow 19-1700] Loaded user IP repository '/media/psf/TAUV-Playground/zybo-z7-tdoa/ip_repo/led_debug'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/theo/Xilinx/Vivado/2022.2/data/ip'.
Command: link_design -top tdoa -part xc7z020clg400-1
Design is defaulting to srcset: sources_1
Design is defaulting to constrset: constrs_1
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.13 ; elapsed = 00:00:00.16 . Memory (MB): peak = 1709.680 ; gain = 0.000 ; free physical = 738 ; free virtual = 2464
INFO: [Netlist 29-17] Analyzing 2469 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.2
INFO: [Project 1-570] Preparing netlist for logic optimization
Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_processing_system7_0_2/tdoa_processing_system7_0_2.xdc] for cell 'processing_system7_0/inst'
Finished Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_processing_system7_0_2/tdoa_processing_system7_0_2.xdc] for cell 'processing_system7_0/inst'
Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila_impl.xdc] for cell 'system_ila_0/inst/ila_lib/inst'
Finished Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila_impl.xdc] for cell 'system_ila_0/inst/ila_lib/inst'
Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc] for cell 'system_ila_0/inst/ila_lib/inst'
Finished Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_system_ila_0_0/bd_0/ip/ip_0/ila_v6_2/constraints/ila.xdc] for cell 'system_ila_0/inst/ila_lib/inst'
Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_proc_sys_reset_0_0/tdoa_proc_sys_reset_0_0_board.xdc] for cell 'proc_sys_reset_0/U0'
Finished Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_proc_sys_reset_0_0/tdoa_proc_sys_reset_0_0_board.xdc] for cell 'proc_sys_reset_0/U0'
Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_proc_sys_reset_0_0/tdoa_proc_sys_reset_0_0.xdc] for cell 'proc_sys_reset_0/U0'
Finished Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_proc_sys_reset_0_0/tdoa_proc_sys_reset_0_0.xdc] for cell 'proc_sys_reset_0/U0'
Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_axi_xadc_sampler_0_3/src/xadc_wiz_0_3/xadc_wiz_0.xdc] for cell 'axi_xadc_sampler_0/inst/xadc/inst'
Finished Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.gen/sources_1/bd/tdoa/ip/tdoa_axi_xadc_sampler_0_3/src/xadc_wiz_0_3/xadc_wiz_0.xdc] for cell 'axi_xadc_sampler_0/inst/xadc/inst'
Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.srcs/constrs_1/imports/digilent-xdc-master/Zybo-Z7-Master.xdc]
Finished Parsing XDC File [/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.srcs/constrs_1/imports/digilent-xdc-master/Zybo-Z7-Master.xdc]
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 1855.973 ; gain = 0.000 ; free physical = 620 ; free virtual = 2354
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 568 instances were transformed.
  CFGLUT5 => CFGLUT5 (SRL16E, SRLC32E): 568 instances

14 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
link_design completed successfully
link_design: Time (s): cpu = 00:00:16 ; elapsed = 00:00:20 . Memory (MB): peak = 1855.973 ; gain = 511.887 ; free physical = 620 ; free virtual = 2354
INFO: [Common 17-600] The following parameters have non-default value.
tcl.collectionResultDisplayLimit
Command: opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command opt_design

Starting DRC Task
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Project 1-461] DRC finished with 0 Errors
INFO: [Project 1-462] Please refer to the DRC report (report_drc) for more information.

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 1898.723 ; gain = 42.750 ; free physical = 588 ; free virtual = 2335

Starting Cache Timing Information Task
INFO: [Timing 38-35] Done setting XDC timing constraints.
Ending Cache Timing Information Task | Checksum: 1957edf72

Time (s): cpu = 00:00:10 ; elapsed = 00:00:11 . Memory (MB): peak = 2372.574 ; gain = 473.852 ; free physical = 143 ; free virtual = 1891

Starting Logic Optimization Task

Phase 1 Generate And Synthesize Debug Cores
INFO: [Chipscope 16-329] Generating Script for core instance : dbg_hub 
INFO: [IP_Flow 19-3806] Processing IP xilinx.com:ip:xsdbm:3.0 for cell dbg_hub_CV.
INFO: [Chipscope 16-469] Using cached IP synthesis design for IP xilinx.com:ip:xsdbm:3.0, cache-ID = c363300abeb4feb8.
Netlist sorting complete. Time (s): cpu = 00:00:00.02 ; elapsed = 00:00:00.02 . Memory (MB): peak = 2692.152 ; gain = 0.000 ; free physical = 595 ; free virtual = 1656
Phase 1 Generate And Synthesize Debug Cores | Checksum: 237760c04

Time (s): cpu = 00:00:25 ; elapsed = 00:00:38 . Memory (MB): peak = 2692.152 ; gain = 30.719 ; free physical = 595 ; free virtual = 1656

Phase 2 Retarget
INFO: [Opt 31-1287] Pulled Inverter system_ila_0/inst/ila_lib/inst/ila_core_inst/xsdb_memory_read_inst/current_state[0]_i_1 into driver instance system_ila_0/inst/ila_lib/inst/ila_core_inst/xsdb_memory_read_inst/read_addr[11]_i_3, which resulted in an inversion of 16 pins
INFO: [Opt 31-138] Pushed 1 inverter(s) to 1 load pin(s).
INFO: [Opt 31-49] Retargeted 0 cell(s).
Phase 2 Retarget | Checksum: 29abbb829

Time (s): cpu = 00:00:27 ; elapsed = 00:00:39 . Memory (MB): peak = 2692.152 ; gain = 30.719 ; free physical = 634 ; free virtual = 1695
INFO: [Opt 31-389] Phase Retarget created 5 cells and removed 37 cells
INFO: [Opt 31-1021] In phase Retarget, 67 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 3 Constant propagation
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
Phase 3 Constant propagation | Checksum: 2590230ce

Time (s): cpu = 00:00:27 ; elapsed = 00:00:39 . Memory (MB): peak = 2692.152 ; gain = 30.719 ; free physical = 621 ; free virtual = 1695
INFO: [Opt 31-389] Phase Constant propagation created 0 cells and removed 16 cells
INFO: [Opt 31-1021] In phase Constant propagation, 51 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 4 Sweep
Phase 4 Sweep | Checksum: 1b49e8f23

Time (s): cpu = 00:00:27 ; elapsed = 00:00:40 . Memory (MB): peak = 2692.152 ; gain = 30.719 ; free physical = 621 ; free virtual = 1695
INFO: [Opt 31-389] Phase Sweep created 0 cells and removed 42 cells
INFO: [Opt 31-1021] In phase Sweep, 1563 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 

Phase 5 BUFG optimization
Phase 5 BUFG optimization | Checksum: 1b49e8f23

Time (s): cpu = 00:00:28 ; elapsed = 00:00:41 . Memory (MB): peak = 2724.168 ; gain = 62.734 ; free physical = 630 ; free virtual = 1692
INFO: [Opt 31-662] Phase BUFG optimization created 0 cells of which 0 are BUFGs and removed 0 cells.

Phase 6 Shift Register Optimization
INFO: [Opt 31-1064] SRL Remap converted 0 SRLs to 0 registers and converted 0 registers of register chains to 0 SRLs
Phase 6 Shift Register Optimization | Checksum: 1b49e8f23

Time (s): cpu = 00:00:28 ; elapsed = 00:00:41 . Memory (MB): peak = 2724.168 ; gain = 62.734 ; free physical = 630 ; free virtual = 1692
INFO: [Opt 31-389] Phase Shift Register Optimization created 0 cells and removed 0 cells

Phase 7 Post Processing Netlist
Phase 7 Post Processing Netlist | Checksum: 1b49e8f23

Time (s): cpu = 00:00:28 ; elapsed = 00:00:41 . Memory (MB): peak = 2724.168 ; gain = 62.734 ; free physical = 630 ; free virtual = 1692
INFO: [Opt 31-389] Phase Post Processing Netlist created 0 cells and removed 0 cells
INFO: [Opt 31-1021] In phase Post Processing Netlist, 59 netlist objects are constrained preventing optimization. Please run opt_design with -debug_log to get more detail. 
Opt_design Change Summary
=========================


-------------------------------------------------------------------------------------------------------------------------
|  Phase                        |  #Cells created  |  #Cells Removed  |  #Constrained objects preventing optimizations  |
-------------------------------------------------------------------------------------------------------------------------
|  Retarget                     |               5  |              37  |                                             67  |
|  Constant propagation         |               0  |              16  |                                             51  |
|  Sweep                        |               0  |              42  |                                           1563  |
|  BUFG optimization            |               0  |               0  |                                              0  |
|  Shift Register Optimization  |               0  |               0  |                                              0  |
|  Post Processing Netlist      |               0  |               0  |                                             59  |
-------------------------------------------------------------------------------------------------------------------------



Starting Connectivity Check Task

Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.04 . Memory (MB): peak = 2724.168 ; gain = 0.000 ; free physical = 630 ; free virtual = 1692
Ending Logic Optimization Task | Checksum: 17d651e97

Time (s): cpu = 00:00:28 ; elapsed = 00:00:41 . Memory (MB): peak = 2724.168 ; gain = 62.734 ; free physical = 630 ; free virtual = 1692

Starting Power Optimization Task
INFO: [Pwropt 34-132] Skipping clock gating for clocks with a period < 2.00 ns.
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Pwropt 34-9] Applying IDT optimizations ...
INFO: [Pwropt 34-10] Applying ODC optimizations ...
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation


Starting PowerOpt Patch Enables Task
INFO: [Pwropt 34-162] WRITE_MODE attribute of 0 BRAM(s) out of a total of 40 has been updated to save power. Run report_power_opt to get a complete listing of the BRAMs updated.
INFO: [Pwropt 34-201] Structural ODC has moved 0 WE to EN ports
Number of BRAM Ports augmented: 40 newly gated: 0 Total Ports: 80
Ending PowerOpt Patch Enables Task | Checksum: 1758f4cfe

Time (s): cpu = 00:00:00.22 ; elapsed = 00:00:00.25 . Memory (MB): peak = 2926.844 ; gain = 0.000 ; free physical = 511 ; free virtual = 1610
Ending Power Optimization Task | Checksum: 1758f4cfe

Time (s): cpu = 00:00:11 ; elapsed = 00:00:15 . Memory (MB): peak = 2926.844 ; gain = 202.676 ; free physical = 530 ; free virtual = 1629

Starting Final Cleanup Task
Ending Final Cleanup Task | Checksum: 1758f4cfe

Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2926.844 ; gain = 0.000 ; free physical = 530 ; free virtual = 1629

Starting Netlist Obfuscation Task
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2926.844 ; gain = 0.000 ; free physical = 530 ; free virtual = 1629
Ending Netlist Obfuscation Task | Checksum: 215228bd3

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.02 . Memory (MB): peak = 2926.844 ; gain = 0.000 ; free physical = 530 ; free virtual = 1629
INFO: [Common 17-83] Releasing license: Implementation
48 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
opt_design completed successfully
opt_design: Time (s): cpu = 00:00:53 ; elapsed = 00:01:12 . Memory (MB): peak = 2926.844 ; gain = 1070.871 ; free physical = 530 ; free virtual = 1629
INFO: [Common 17-600] The following parameters have non-default value.
tcl.collectionResultDisplayLimit
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:00.42 ; elapsed = 00:00:00.55 . Memory (MB): peak = 2958.859 ; gain = 32.016 ; free physical = 502 ; free virtual = 1606
INFO: [Common 17-1381] The checkpoint '/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa_opt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:05 ; elapsed = 00:00:08 . Memory (MB): peak = 2958.859 ; gain = 32.016 ; free physical = 496 ; free virtual = 1633
INFO: [runtcl-4] Executing : report_drc -file tdoa_drc_opted.rpt -pb tdoa_drc_opted.pb -rpx tdoa_drc_opted.rpx
Command: report_drc -file tdoa_drc_opted.rpt -pb tdoa_drc_opted.pb -rpx tdoa_drc_opted.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa_drc_opted.rpt.
report_drc completed successfully
INFO: [Chipscope 16-240] Debug cores have already been implemented
Command: place_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.
Running DRC as a precondition to command place_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.

Starting Placer Task
INFO: [Place 30-611] Multithreading enabled for place_design using a maximum of 2 CPUs

Phase 1 Placer Initialization

Phase 1.1 Placer Initialization Netlist Sorting
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 483 ; free virtual = 1610
Phase 1.1 Placer Initialization Netlist Sorting | Checksum: 14c90ecc2

Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00.03 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 483 ; free virtual = 1610
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.01 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 483 ; free virtual = 1610

Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device
Phase 1.2 IO Placement/ Clock Placement/ Build Placer Device | Checksum: 13c3d6e4d

Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 479 ; free virtual = 1624

Phase 1.3 Build Placer Netlist Model
Phase 1.3 Build Placer Netlist Model | Checksum: 120dba15a

Time (s): cpu = 00:00:07 ; elapsed = 00:00:09 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 479 ; free virtual = 1601

Phase 1.4 Constrain Clocks/Macros
Phase 1.4 Constrain Clocks/Macros | Checksum: 120dba15a

Time (s): cpu = 00:00:07 ; elapsed = 00:00:09 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 479 ; free virtual = 1601
Phase 1 Placer Initialization | Checksum: 120dba15a

Time (s): cpu = 00:00:07 ; elapsed = 00:00:09 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 479 ; free virtual = 1601

Phase 2 Global Placement

Phase 2.1 Floorplanning
Phase 2.1 Floorplanning | Checksum: 1d986cb03

Time (s): cpu = 00:00:09 ; elapsed = 00:00:11 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 466 ; free virtual = 1602

Phase 2.2 Update Timing before SLR Path Opt
Phase 2.2 Update Timing before SLR Path Opt | Checksum: 1f28fe7c5

Time (s): cpu = 00:00:11 ; elapsed = 00:00:13 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 464 ; free virtual = 1600

Phase 2.3 Post-Processing in Floorplanning
Phase 2.3 Post-Processing in Floorplanning | Checksum: 1f28fe7c5

Time (s): cpu = 00:00:11 ; elapsed = 00:00:13 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 464 ; free virtual = 1600

Phase 2.4 Global Placement Core

Phase 2.4.1 UpdateTiming Before Physical Synthesis
Phase 2.4.1 UpdateTiming Before Physical Synthesis | Checksum: 173ac64fa

Time (s): cpu = 00:00:26 ; elapsed = 00:00:31 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 448 ; free virtual = 1585

Phase 2.4.2 Physical Synthesis In Placer
INFO: [Physopt 32-1035] Found 0 LUTNM shape to break, 681 LUT instances to create LUTNM shape
INFO: [Physopt 32-1044] Break lutnm for timing: one critical 0, two critical 0, total 0, new lutff created 0
INFO: [Physopt 32-1138] End 1 Pass. Optimized 330 nets or LUTs. Breaked 0 LUT, combined 330 existing LUTs and moved 0 existing LUT
INFO: [Physopt 32-65] No nets found for high-fanout optimization.
INFO: [Physopt 32-232] Optimized 0 net. Created 0 new instance.
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
INFO: [Physopt 32-670] No setup violation found.  DSP Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register to Pipeline Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  Shift Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  BRAM Register Optimization was not performed.
INFO: [Physopt 32-670] No setup violation found.  URAM Register Optimization was not performed.
INFO: [Physopt 32-949] No candidate nets found for dynamic/static region interface net replication
INFO: [Physopt 32-775] End 1 Pass. Optimized 0 net or cell. Created 0 new cell, deleted 0 existing cell and moved 0 existing cell
Netlist sorting complete. Time (s): cpu = 00:00:00.01 ; elapsed = 00:00:00 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 440 ; free virtual = 1598

Summary of Physical Synthesis Optimizations
============================================


-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  Optimization                                     |  Added Cells  |  Removed Cells  |  Optimized Cells/Nets  |  Dont Touch  |  Iterations  |  Elapsed   |
-----------------------------------------------------------------------------------------------------------------------------------------------------------
|  LUT Combining                                    |            0  |            330  |                   330  |           0  |           1  |  00:00:01  |
|  Retime                                           |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Very High Fanout                                 |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  DSP Register                                     |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register to Pipeline                       |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Shift Register                                   |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  BRAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  URAM Register                                    |            0  |              0  |                     0  |           0  |           0  |  00:00:00  |
|  Dynamic/Static Region Interface Net Replication  |            0  |              0  |                     0  |           0  |           1  |  00:00:00  |
|  Total                                            |            0  |            330  |                   330  |           0  |           4  |  00:00:01  |
-----------------------------------------------------------------------------------------------------------------------------------------------------------


Phase 2.4.2 Physical Synthesis In Placer | Checksum: 116c88634

Time (s): cpu = 00:00:29 ; elapsed = 00:00:35 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 423 ; free virtual = 1581
Phase 2.4 Global Placement Core | Checksum: 40d761c7

Time (s): cpu = 00:00:47 ; elapsed = 00:00:54 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 427 ; free virtual = 1573
Phase 2 Global Placement | Checksum: 40d761c7

Time (s): cpu = 00:00:47 ; elapsed = 00:00:54 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 427 ; free virtual = 1573

Phase 3 Detail Placement

Phase 3.1 Commit Multi Column Macros
Phase 3.1 Commit Multi Column Macros | Checksum: d6da9254

Time (s): cpu = 00:00:49 ; elapsed = 00:00:57 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 448 ; free virtual = 1594

Phase 3.2 Commit Most Macros & LUTRAMs
Phase 3.2 Commit Most Macros & LUTRAMs | Checksum: d7ef47de

Time (s): cpu = 00:00:53 ; elapsed = 00:01:01 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 434 ; free virtual = 1580

Phase 3.3 Area Swap Optimization
Phase 3.3 Area Swap Optimization | Checksum: 128e2eb44

Time (s): cpu = 00:00:53 ; elapsed = 00:01:02 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 421 ; free virtual = 1580

Phase 3.4 Pipeline Register Optimization
Phase 3.4 Pipeline Register Optimization | Checksum: 9ced5f78

Time (s): cpu = 00:00:53 ; elapsed = 00:01:02 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 421 ; free virtual = 1580

Phase 3.5 Small Shape Detail Placement
Phase 3.5 Small Shape Detail Placement | Checksum: becd5a6f

Time (s): cpu = 00:00:57 ; elapsed = 00:01:06 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 421 ; free virtual = 1567

Phase 3.6 Re-assign LUT pins
Phase 3.6 Re-assign LUT pins | Checksum: e623fb58

Time (s): cpu = 00:00:58 ; elapsed = 00:01:07 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 421 ; free virtual = 1567

Phase 3.7 Pipeline Register Optimization
Phase 3.7 Pipeline Register Optimization | Checksum: 1713d474f

Time (s): cpu = 00:00:58 ; elapsed = 00:01:07 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 421 ; free virtual = 1567
Phase 3 Detail Placement | Checksum: 1713d474f

Time (s): cpu = 00:00:58 ; elapsed = 00:01:07 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 421 ; free virtual = 1567

Phase 4 Post Placement Optimization and Clean-Up

Phase 4.1 Post Commit Optimization
INFO: [Timing 38-35] Done setting XDC timing constraints.

Phase 4.1.1 Post Placement Optimization
Post Placement Optimization Initialization | Checksum: 12b0d91ac

Phase 4.1.1.1 BUFG Insertion

Starting Physical Synthesis Task

Phase 1 Physical Synthesis Initialization
INFO: [Physopt 32-721] Multithreading enabled for phys_opt_design using a maximum of 2 CPUs
INFO: [Physopt 32-619] Estimated Timing Summary | WNS=0.949 | TNS=0.000 |
Phase 1 Physical Synthesis Initialization | Checksum: 1581cdee5

Time (s): cpu = 00:00:01 ; elapsed = 00:00:02 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 385 ; free virtual = 1532
INFO: [Place 46-56] BUFG insertion identified 0 candidate nets. Inserted BUFG: 0, Replicated BUFG Driver: 0, Skipped due to Placement/Routing Conflicts: 0, Skipped due to Timing Degradation: 0, Skipped due to Illegal Netlist: 0.
Ending Physical Synthesis Task | Checksum: 1844a6aa8

Time (s): cpu = 00:00:02 ; elapsed = 00:00:02 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 385 ; free virtual = 1532
Phase 4.1.1.1 BUFG Insertion | Checksum: 12b0d91ac

Time (s): cpu = 00:01:09 ; elapsed = 00:01:19 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 385 ; free virtual = 1532

Phase 4.1.1.2 Post Placement Timing Optimization
INFO: [Place 30-746] Post Placement Timing Summary WNS=0.949. For the most accurate timing information please run report_timing.
Phase 4.1.1.2 Post Placement Timing Optimization | Checksum: 1b36a94b4

Time (s): cpu = 00:01:09 ; elapsed = 00:01:20 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 373 ; free virtual = 1533

Time (s): cpu = 00:01:09 ; elapsed = 00:01:20 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 373 ; free virtual = 1533
Phase 4.1 Post Commit Optimization | Checksum: 1b36a94b4

Time (s): cpu = 00:01:09 ; elapsed = 00:01:20 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 373 ; free virtual = 1532

Phase 4.2 Post Placement Cleanup
Phase 4.2 Post Placement Cleanup | Checksum: 1b36a94b4

Time (s): cpu = 00:01:09 ; elapsed = 00:01:20 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 373 ; free virtual = 1532

Phase 4.3 Placer Reporting

Phase 4.3.1 Print Estimated Congestion
INFO: [Place 30-612] Post-Placement Estimated Congestion 
 ____________________________________________________
|           | Global Congestion | Short Congestion  |
| Direction | Region Size       | Region Size       |
|___________|___________________|___________________|
|      North|                1x1|                2x2|
|___________|___________________|___________________|
|      South|                1x1|                1x1|
|___________|___________________|___________________|
|       East|                1x1|                1x1|
|___________|___________________|___________________|
|       West|                1x1|                1x1|
|___________|___________________|___________________|

Phase 4.3.1 Print Estimated Congestion | Checksum: 1b36a94b4

Time (s): cpu = 00:01:09 ; elapsed = 00:01:20 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 373 ; free virtual = 1532
Phase 4.3 Placer Reporting | Checksum: 1b36a94b4

Time (s): cpu = 00:01:10 ; elapsed = 00:01:21 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 373 ; free virtual = 1532

Phase 4.4 Final Placement Cleanup
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 374 ; free virtual = 1521

Time (s): cpu = 00:01:10 ; elapsed = 00:01:21 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 374 ; free virtual = 1521
Phase 4 Post Placement Optimization and Clean-Up | Checksum: 200b9e599

Time (s): cpu = 00:01:10 ; elapsed = 00:01:21 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 374 ; free virtual = 1521
Ending Placer Task | Checksum: 109081c7c

Time (s): cpu = 00:01:10 ; elapsed = 00:01:21 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 374 ; free virtual = 1521
INFO: [Common 17-83] Releasing license: Implementation
85 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
place_design completed successfully
place_design: Time (s): cpu = 00:01:12 ; elapsed = 00:01:24 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 382 ; free virtual = 1529
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:04 ; elapsed = 00:00:06 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 349 ; free virtual = 1531
INFO: [Common 17-1381] The checkpoint '/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa_placed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:07 ; elapsed = 00:00:12 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 351 ; free virtual = 1542
INFO: [runtcl-4] Executing : report_io -file tdoa_io_placed.rpt
report_io: Time (s): cpu = 00:00:00.11 ; elapsed = 00:00:00.3 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 342 ; free virtual = 1533
INFO: [runtcl-4] Executing : report_utilization -file tdoa_utilization_placed.rpt -pb tdoa_utilization_placed.pb
INFO: [runtcl-4] Executing : report_control_sets -verbose -file tdoa_control_sets_placed.rpt
report_control_sets: Time (s): cpu = 00:00:00.12 ; elapsed = 00:00:00.26 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 345 ; free virtual = 1537
Command: phys_opt_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'

Starting Initial Update Timing Task

Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 307 ; free virtual = 1512
INFO: [Vivado_Tcl 4-383] Design worst setup slack (WNS) is greater than or equal to 0.000 ns. Skipping all physical synthesis optimizations.
INFO: [Vivado_Tcl 4-232] No setup violation found. The netlist was not modified.
INFO: [Common 17-83] Releasing license: Implementation
94 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
phys_opt_design completed successfully
phys_opt_design: Time (s): cpu = 00:00:06 ; elapsed = 00:00:07 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 307 ; free virtual = 1512
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:04 ; elapsed = 00:00:07 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 278 ; free virtual = 1505
INFO: [Common 17-1381] The checkpoint '/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa_physopt.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:05 ; elapsed = 00:00:10 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 265 ; free virtual = 1502
Command: route_design
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command route_design
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 4-198] DRC finished with 0 Errors
INFO: [Vivado_Tcl 4-199] Please refer to the DRC report (report_drc) for more information.


Starting Routing Task
INFO: [Route 35-254] Multithreading enabled for route_design using a maximum of 2 CPUs

Phase 1 Build RT Design
Checksum: PlaceDB: 9b8251d8 ConstDB: 0 ShapeSum: 6d85caa4 RouteDB: 0
Post Restoration Checksum: NetGraph: d6e3a127 NumContArr: a8f339b0 Constraints: 0 Timing: 0
Phase 1 Build RT Design | Checksum: 17fd6dad7

Time (s): cpu = 00:00:29 ; elapsed = 00:00:33 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 177 ; free virtual = 1414

Phase 2 Router Initialization

Phase 2.1 Fix Topology Constraints
Phase 2.1 Fix Topology Constraints | Checksum: 17fd6dad7

Time (s): cpu = 00:00:29 ; elapsed = 00:00:33 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 167 ; free virtual = 1405

Phase 2.2 Pre Route Cleanup
Phase 2.2 Pre Route Cleanup | Checksum: 17fd6dad7

Time (s): cpu = 00:00:29 ; elapsed = 00:00:33 . Memory (MB): peak = 2982.871 ; gain = 0.000 ; free physical = 166 ; free virtual = 1405
 Number of Nodes with overlaps = 0

Phase 2.3 Update Timing
Phase 2.3 Update Timing | Checksum: 2a7e46aa2

Time (s): cpu = 00:00:39 ; elapsed = 00:00:44 . Memory (MB): peak = 3018.246 ; gain = 35.375 ; free physical = 125 ; free virtual = 1346
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.093  | TNS=0.000  | WHS=-0.192 | THS=-302.121|


Phase 2.4 Update Timing for Bus Skew

Phase 2.4.1 Update Timing
Phase 2.4.1 Update Timing | Checksum: 22f84d4b6

Time (s): cpu = 00:00:44 ; elapsed = 00:00:50 . Memory (MB): peak = 3030.246 ; gain = 47.375 ; free physical = 140 ; free virtual = 1310
INFO: [Route 35-416] Intermediate Timing Summary | WNS=1.093  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 2.4 Update Timing for Bus Skew | Checksum: 1bd521d66

Time (s): cpu = 00:00:44 ; elapsed = 00:00:50 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 140 ; free virtual = 1314

Router Utilization Summary
  Global Vertical Routing Utilization    = 0 %
  Global Horizontal Routing Utilization  = 0 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 26828
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 26828
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 2 Router Initialization | Checksum: 1f2e35675

Time (s): cpu = 00:00:45 ; elapsed = 00:00:51 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 139 ; free virtual = 1313

Phase 3 Initial Routing

Phase 3.1 Global Routing
Phase 3.1 Global Routing | Checksum: 1f2e35675

Time (s): cpu = 00:00:45 ; elapsed = 00:00:51 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 139 ; free virtual = 1313
Phase 3 Initial Routing | Checksum: 1cd01e817

Time (s): cpu = 00:00:48 ; elapsed = 00:00:55 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 149 ; free virtual = 1324

Phase 4 Rip-up And Reroute

Phase 4.1 Global Iteration 0
 Number of Nodes with overlaps = 2250
 Number of Nodes with overlaps = 850
 Number of Nodes with overlaps = 324
 Number of Nodes with overlaps = 150
 Number of Nodes with overlaps = 57
 Number of Nodes with overlaps = 26
 Number of Nodes with overlaps = 2
 Number of Nodes with overlaps = 0
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.120  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 4.1 Global Iteration 0 | Checksum: d29fd9dd

Time (s): cpu = 00:01:16 ; elapsed = 00:01:26 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 173 ; free virtual = 1347
Phase 4 Rip-up And Reroute | Checksum: d29fd9dd

Time (s): cpu = 00:01:16 ; elapsed = 00:01:26 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 173 ; free virtual = 1347

Phase 5 Delay and Skew Optimization

Phase 5.1 Delay CleanUp

Phase 5.1.1 Update Timing
Phase 5.1.1 Update Timing | Checksum: cad8857c

Time (s): cpu = 00:01:18 ; elapsed = 00:01:28 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 160 ; free virtual = 1334
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.235  | TNS=0.000  | WHS=N/A    | THS=N/A    |

Phase 5.1 Delay CleanUp | Checksum: ab93b4de

Time (s): cpu = 00:01:18 ; elapsed = 00:01:28 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 160 ; free virtual = 1334

Phase 5.2 Clock Skew Optimization
Phase 5.2 Clock Skew Optimization | Checksum: ab93b4de

Time (s): cpu = 00:01:18 ; elapsed = 00:01:28 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 160 ; free virtual = 1334
Phase 5 Delay and Skew Optimization | Checksum: ab93b4de

Time (s): cpu = 00:01:18 ; elapsed = 00:01:28 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 160 ; free virtual = 1334

Phase 6 Post Hold Fix

Phase 6.1 Hold Fix Iter

Phase 6.1.1 Update Timing
Phase 6.1.1 Update Timing | Checksum: 10564c2a3

Time (s): cpu = 00:01:20 ; elapsed = 00:01:31 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 146 ; free virtual = 1333
INFO: [Route 35-416] Intermediate Timing Summary | WNS=0.235  | TNS=0.000  | WHS=0.020  | THS=0.000  |

Phase 6.1 Hold Fix Iter | Checksum: a460e8a3

Time (s): cpu = 00:01:20 ; elapsed = 00:01:31 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 146 ; free virtual = 1333
Phase 6 Post Hold Fix | Checksum: a460e8a3

Time (s): cpu = 00:01:20 ; elapsed = 00:01:31 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 146 ; free virtual = 1321

Phase 7 Route finalize

Router Utilization Summary
  Global Vertical Routing Utilization    = 4.83302 %
  Global Horizontal Routing Utilization  = 5.64089 %
  Routable Net Status*
  *Does not include unroutable nets such as driverless and loadless.
  Run report_route_status for detailed report.
  Number of Failed Nets               = 0
    (Failed Nets is the sum of unrouted and partially routed nets)
  Number of Unrouted Nets             = 0
  Number of Partially Routed Nets     = 0
  Number of Node Overlaps             = 0

Phase 7 Route finalize | Checksum: 12fccc5af

Time (s): cpu = 00:01:20 ; elapsed = 00:01:31 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 146 ; free virtual = 1321

Phase 8 Verifying routed nets

 Verification completed successfully
Phase 8 Verifying routed nets | Checksum: 12fccc5af

Time (s): cpu = 00:01:21 ; elapsed = 00:01:31 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 146 ; free virtual = 1321

Phase 9 Depositing Routes
Phase 9 Depositing Routes | Checksum: 1dae94a84

Time (s): cpu = 00:01:22 ; elapsed = 00:01:33 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 133 ; free virtual = 1321

Phase 10 Post Router Timing
INFO: [Route 35-57] Estimated Timing Summary | WNS=0.235  | TNS=0.000  | WHS=0.020  | THS=0.000  |

INFO: [Route 35-327] The final timing numbers are based on the router estimated timing analysis. For a complete and accurate timing signoff, please run report_timing_summary.
Phase 10 Post Router Timing | Checksum: 1dae94a84

Time (s): cpu = 00:01:24 ; elapsed = 00:01:35 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 171 ; free virtual = 1346
INFO: [Route 35-16] Router Completed Successfully

Time (s): cpu = 00:01:24 ; elapsed = 00:01:35 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 178 ; free virtual = 1353

Routing Is Done.
INFO: [Common 17-83] Releasing license: Implementation
110 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
route_design completed successfully
route_design: Time (s): cpu = 00:01:27 ; elapsed = 00:01:39 . Memory (MB): peak = 3046.246 ; gain = 63.375 ; free physical = 178 ; free virtual = 1353
INFO: [Common 17-600] The following parameters have non-default value.
general.maxThreads
INFO: [Timing 38-480] Writing timing data to binary archive.
Writing XDEF routing.
Writing XDEF routing logical nets.
Writing XDEF routing special nets.
Write XDEF Complete: Time (s): cpu = 00:00:04 ; elapsed = 00:00:07 . Memory (MB): peak = 3062.254 ; gain = 8.004 ; free physical = 133 ; free virtual = 1360
INFO: [Common 17-1381] The checkpoint '/media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa_routed.dcp' has been generated.
write_checkpoint: Time (s): cpu = 00:00:08 ; elapsed = 00:00:13 . Memory (MB): peak = 3062.254 ; gain = 16.008 ; free physical = 128 ; free virtual = 1349
INFO: [runtcl-4] Executing : report_drc -file tdoa_drc_routed.rpt -pb tdoa_drc_routed.pb -rpx tdoa_drc_routed.rpx
Command: report_drc -file tdoa_drc_routed.rpt -pb tdoa_drc_routed.pb -rpx tdoa_drc_routed.rpx
INFO: [IP_Flow 19-1839] IP Catalog is up to date.
INFO: [DRC 23-27] Running DRC with 2 threads
INFO: [Vivado_Tcl 2-168] The results of DRC are in file /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa_drc_routed.rpt.
report_drc completed successfully
report_drc: Time (s): cpu = 00:00:05 ; elapsed = 00:00:06 . Memory (MB): peak = 3062.254 ; gain = 0.000 ; free physical = 169 ; free virtual = 1375
INFO: [runtcl-4] Executing : report_methodology -file tdoa_methodology_drc_routed.rpt -pb tdoa_methodology_drc_routed.pb -rpx tdoa_methodology_drc_routed.rpx
Command: report_methodology -file tdoa_methodology_drc_routed.rpt -pb tdoa_methodology_drc_routed.pb -rpx tdoa_methodology_drc_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
INFO: [DRC 23-133] Running Methodology with 2 threads
INFO: [Vivado_Tcl 2-1520] The results of Report Methodology are in file /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa_methodology_drc_routed.rpt.
report_methodology completed successfully
report_methodology: Time (s): cpu = 00:00:14 ; elapsed = 00:00:16 . Memory (MB): peak = 3062.254 ; gain = 0.000 ; free physical = 137 ; free virtual = 1330
INFO: [runtcl-4] Executing : report_power -file tdoa_power_routed.rpt -pb tdoa_power_summary_routed.pb -rpx tdoa_power_routed.rpx
Command: report_power -file tdoa_power_routed.rpt -pb tdoa_power_summary_routed.pb -rpx tdoa_power_routed.rpx
INFO: [Timing 38-35] Done setting XDC timing constraints.
Running Vector-less Activity Propagation...

Finished Running Vector-less Activity Propagation
123 Infos, 0 Warnings, 0 Critical Warnings and 0 Errors encountered.
report_power completed successfully
report_power: Time (s): cpu = 00:00:09 ; elapsed = 00:00:11 . Memory (MB): peak = 3062.254 ; gain = 0.000 ; free physical = 121 ; free virtual = 1319
INFO: [runtcl-4] Executing : report_route_status -file tdoa_route_status.rpt -pb tdoa_route_status.pb
INFO: [runtcl-4] Executing : report_timing_summary -max_paths 10 -report_unconstrained -file tdoa_timing_summary_routed.rpt -pb tdoa_timing_summary_routed.pb -rpx tdoa_timing_summary_routed.rpx -warn_on_violation 
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
WARNING: [Timing 38-436] There are set_bus_skew constraint(s) in this design. Please run report_bus_skew to ensure that bus skew requirements are met.
INFO: [runtcl-4] Executing : report_incremental_reuse -file tdoa_incremental_reuse_routed.rpt
INFO: [Vivado_Tcl 4-1062] Incremental flow is disabled. No incremental reuse Info to report.
INFO: [runtcl-4] Executing : report_clock_utilization -file tdoa_clock_utilization_routed.rpt
INFO: [runtcl-4] Executing : report_bus_skew -warn_on_violation -file tdoa_bus_skew_routed.rpt -pb tdoa_bus_skew_routed.pb -rpx tdoa_bus_skew_routed.rpx
INFO: [Timing 38-91] UpdateTimingParams: Speed grade: -1, Delay Type: min_max.
INFO: [Timing 38-191] Multithreading enabled for timing update using a maximum of 2 CPUs
INFO: [Common 17-206] Exiting Vivado at Thu Apr 27 02:59:12 2023...
#-----------------------------------------------------------
# Vivado v2022.2 (64-bit)
# SW Build 3671981 on Fri Oct 14 04:59:54 MDT 2022
# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
# Start of session at: Thu Apr 27 02:59:39 2023
# Process ID: 136268
# Current directory: /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1
# Command line: vivado -log tdoa.vdi -applog -product Vivado -messageDb vivado.pb -mode batch -source tdoa.tcl -notrace
# Log file: /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/tdoa.vdi
# Journal file: /media/psf/TAUV-Playground/zybo-z7-tdoa/zybo-z7-tdoa/zybo-z7-tdoa.runs/impl_1/vivado.jou
# Running On: theo-ubuntu, OS: Linux, CPU Frequency: 2592.000 MHz, CPU Physical cores: 2, Host memory: 8328 MB
#-----------------------------------------------------------
source tdoa.tcl -notrace
Command: open_checkpoint tdoa_routed.dcp

Starting open_checkpoint Task

Time (s): cpu = 00:00:00.03 ; elapsed = 00:00:00.05 . Memory (MB): peak = 1331.020 ; gain = 0.000 ; free physical = 1700 ; free virtual = 3031
INFO: [Device 21-403] Loading part xc7z020clg400-1
Netlist sorting complete. Time (s): cpu = 00:00:00.13 ; elapsed = 00:00:00.16 . Memory (MB): peak = 1656.691 ; gain = 0.000 ; free physical = 1173 ; free virtual = 2524
INFO: [Netlist 29-17] Analyzing 2487 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 0 CPU seconds
INFO: [Project 1-479] Netlist was created with Vivado 2022.2
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Timing 38-478] Restoring timing data from binary archive.
INFO: [Timing 38-479] Binary timing data restore complete.
INFO: [Project 1-856] Restoring constraints from binary archive.
INFO: [Constraints 18-5170] The checkpoint was created with non-default parameter values which do not match the current Vivado settings.  Mismatching parameters are:
  general.maxThreads
INFO: [Project 1-853] Binary constraint restore complete.
Reading XDEF placement.
Reading placer database...
Reading XDEF routing.
Read XDEF Files: Time (s): cpu = 00:00:02 ; elapsed = 00:00:03 . Memory (MB): peak = 2324.730 ; gain = 20.898 ; free physical = 510 ; free virtual = 1899
Restored from archive | CPU: 2.610000 secs | Memory: 31.533096 MB |
Finished XDEF File Restore: Time (s): cpu = 00:00:02 ; elapsed = 00:00:03 . Memory (MB): peak = 2324.730 ; gain = 20.898 ; free physical = 510 ; free virtual = 1899
Netlist sorting complete. Time (s): cpu = 00:00:00 ; elapsed = 00:00:00 . Memory (MB): peak = 2324.730 ; gain = 0.000 ; free physical = 524 ; free virtual = 1900
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 574 instances were transformed.
  CFGLUT5 => CFGLUT5 (SRL16E, SRLC32E): 568 instances
  RAM32M => RAM32M (RAMD32(x6), RAMS32(x2)): 6 instances

INFO: [Project 1-604] Checkpoint was created with Vivado v2022.2 (64-bit) build 3671981
OpenCheckpoint Checksum | Checksum: 19dd80eb3
----- Checksum: PlaceDB: 6467309e ShapeSum: 6d85caa4 RouteDB: cbeb1371 
open_checkpoint: Time (s): cpu = 00:00:27 ; elapsed = 00:00:34 . Memory (MB): peak = 2328.730 ; gain = 997.711 ; free physical = 524 ; free virtual = 1900
Command: write_bitstream -force tdoa.bit
Attempting to get a license for feature 'Implementation' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Implementation' and/or device 'xc7z020'
Running DRC as a precondition to command write_bitstream
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository '/home/theo/Xilinx/Vivado/2022.2/data/ip'.
INFO: [DRC 23-27] Running DRC with 2 threads
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/mult00 output axi_fsk_demod_0/inst/cmult_hi/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multi0 output axi_fsk_demod_0/inst/cmult_hi/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multi0__0 output axi_fsk_demod_0/inst/cmult_hi/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multr0 output axi_fsk_demod_0/inst/cmult_hi/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multr0__0 output axi_fsk_demod_0/inst/cmult_hi/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/mult00 output axi_fsk_demod_0/inst/cmult_lo/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multi0 output axi_fsk_demod_0/inst/cmult_lo/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multi0__0 output axi_fsk_demod_0/inst/cmult_lo/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multr0 output axi_fsk_demod_0/inst/cmult_lo/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multr0__0 output axi_fsk_demod_0/inst/cmult_lo/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_im_0_sq0 output axi_fsk_demod_0/inst/s_hi_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_im_0_sq0__0 output axi_fsk_demod_0/inst/s_hi_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_re_0_sq0 output axi_fsk_demod_0/inst/s_hi_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_re_0_sq0__0 output axi_fsk_demod_0/inst/s_hi_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_im_0_sq0 output axi_fsk_demod_0/inst/s_lo_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_im_0_sq0__0 output axi_fsk_demod_0/inst/s_lo_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_re_0_sq0 output axi_fsk_demod_0/inst/s_lo_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_re_0_sq0__0 output axi_fsk_demod_0/inst/s_lo_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/mult00 output axi_fsk_demod_1/inst/cmult_hi/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multi0 output axi_fsk_demod_1/inst/cmult_hi/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multi0__0 output axi_fsk_demod_1/inst/cmult_hi/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multr0 output axi_fsk_demod_1/inst/cmult_hi/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multr0__0 output axi_fsk_demod_1/inst/cmult_hi/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/mult00 output axi_fsk_demod_1/inst/cmult_lo/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multi0 output axi_fsk_demod_1/inst/cmult_lo/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multi0__0 output axi_fsk_demod_1/inst/cmult_lo/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multr0 output axi_fsk_demod_1/inst/cmult_lo/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multr0__0 output axi_fsk_demod_1/inst/cmult_lo/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_im_0_sq0 output axi_fsk_demod_1/inst/s_hi_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_im_0_sq0__0 output axi_fsk_demod_1/inst/s_hi_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_re_0_sq0 output axi_fsk_demod_1/inst/s_hi_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_re_0_sq0__0 output axi_fsk_demod_1/inst/s_hi_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_im_0_sq0 output axi_fsk_demod_1/inst/s_lo_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_im_0_sq0__0 output axi_fsk_demod_1/inst/s_lo_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_re_0_sq0 output axi_fsk_demod_1/inst/s_lo_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_re_0_sq0__0 output axi_fsk_demod_1/inst/s_lo_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/mult00 output axi_fsk_demod_2/inst/cmult_hi/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multi0 output axi_fsk_demod_2/inst/cmult_hi/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multi0__0 output axi_fsk_demod_2/inst/cmult_hi/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multr0 output axi_fsk_demod_2/inst/cmult_hi/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multr0__0 output axi_fsk_demod_2/inst/cmult_hi/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/mult00 output axi_fsk_demod_2/inst/cmult_lo/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multi0 output axi_fsk_demod_2/inst/cmult_lo/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multi0__0 output axi_fsk_demod_2/inst/cmult_lo/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multr0 output axi_fsk_demod_2/inst/cmult_lo/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multr0__0 output axi_fsk_demod_2/inst/cmult_lo/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_im_0_sq0 output axi_fsk_demod_2/inst/s_hi_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_im_0_sq0__0 output axi_fsk_demod_2/inst/s_hi_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_re_0_sq0 output axi_fsk_demod_2/inst/s_hi_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_re_0_sq0__0 output axi_fsk_demod_2/inst/s_hi_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_im_0_sq0 output axi_fsk_demod_2/inst/s_lo_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_im_0_sq0__0 output axi_fsk_demod_2/inst/s_lo_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_re_0_sq0 output axi_fsk_demod_2/inst/s_lo_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_re_0_sq0__0 output axi_fsk_demod_2/inst/s_lo_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_hi/mult00 output axi_fsk_demod_3/inst/cmult_hi/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_hi/multi0 output axi_fsk_demod_3/inst/cmult_hi/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_hi/multi0__0 output axi_fsk_demod_3/inst/cmult_hi/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_hi/multr0 output axi_fsk_demod_3/inst/cmult_hi/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_hi/multr0__0 output axi_fsk_demod_3/inst/cmult_hi/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_lo/mult00 output axi_fsk_demod_3/inst/cmult_lo/mult00/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_lo/multi0 output axi_fsk_demod_3/inst/cmult_lo/multi0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_lo/multi0__0 output axi_fsk_demod_3/inst/cmult_lo/multi0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_lo/multr0 output axi_fsk_demod_3/inst/cmult_lo/multr0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/cmult_lo/multr0__0 output axi_fsk_demod_3/inst/cmult_lo/multr0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_hi_im_0_sq0 output axi_fsk_demod_3/inst/s_hi_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_hi_im_0_sq0__0 output axi_fsk_demod_3/inst/s_hi_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_hi_re_0_sq0 output axi_fsk_demod_3/inst/s_hi_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_hi_re_0_sq0__0 output axi_fsk_demod_3/inst/s_hi_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_lo_im_0_sq0 output axi_fsk_demod_3/inst/s_lo_im_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_lo_im_0_sq0__0 output axi_fsk_demod_3/inst/s_lo_im_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_lo_re_0_sq0 output axi_fsk_demod_3/inst/s_lo_re_0_sq0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-1] PREG Output pipelining: DSP axi_fsk_demod_3/inst/s_lo_re_0_sq0__0 output axi_fsk_demod_3/inst/s_lo_re_0_sq0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/mult0_reg multiplier stage axi_fsk_demod_0/inst/cmult_hi/mult0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multi0 multiplier stage axi_fsk_demod_0/inst/cmult_hi/multi0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multi0__0 multiplier stage axi_fsk_demod_0/inst/cmult_hi/multi0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multi_reg multiplier stage axi_fsk_demod_0/inst/cmult_hi/multi_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multi_reg__0 multiplier stage axi_fsk_demod_0/inst/cmult_hi/multi_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multr0 multiplier stage axi_fsk_demod_0/inst/cmult_hi/multr0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multr0__0 multiplier stage axi_fsk_demod_0/inst/cmult_hi/multr0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multr_reg multiplier stage axi_fsk_demod_0/inst/cmult_hi/multr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_hi/multr_reg__0 multiplier stage axi_fsk_demod_0/inst/cmult_hi/multr_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/mult0_reg multiplier stage axi_fsk_demod_0/inst/cmult_lo/mult0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multi0 multiplier stage axi_fsk_demod_0/inst/cmult_lo/multi0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multi0__0 multiplier stage axi_fsk_demod_0/inst/cmult_lo/multi0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multi_reg multiplier stage axi_fsk_demod_0/inst/cmult_lo/multi_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multi_reg__0 multiplier stage axi_fsk_demod_0/inst/cmult_lo/multi_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multr0 multiplier stage axi_fsk_demod_0/inst/cmult_lo/multr0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multr0__0 multiplier stage axi_fsk_demod_0/inst/cmult_lo/multr0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multr_reg multiplier stage axi_fsk_demod_0/inst/cmult_lo/multr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/cmult_lo/multr_reg__0 multiplier stage axi_fsk_demod_0/inst/cmult_lo/multr_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_im_0_sq0 multiplier stage axi_fsk_demod_0/inst/s_hi_im_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_im_0_sq0__0 multiplier stage axi_fsk_demod_0/inst/s_hi_im_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_im_0_sq_reg multiplier stage axi_fsk_demod_0/inst/s_hi_im_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_im_0_sq_reg__0 multiplier stage axi_fsk_demod_0/inst/s_hi_im_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_re_0_sq0 multiplier stage axi_fsk_demod_0/inst/s_hi_re_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_re_0_sq0__0 multiplier stage axi_fsk_demod_0/inst/s_hi_re_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_re_0_sq_reg multiplier stage axi_fsk_demod_0/inst/s_hi_re_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_hi_re_0_sq_reg__0 multiplier stage axi_fsk_demod_0/inst/s_hi_re_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_im_0_sq0 multiplier stage axi_fsk_demod_0/inst/s_lo_im_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_im_0_sq0__0 multiplier stage axi_fsk_demod_0/inst/s_lo_im_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_im_0_sq_reg multiplier stage axi_fsk_demod_0/inst/s_lo_im_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_im_0_sq_reg__0 multiplier stage axi_fsk_demod_0/inst/s_lo_im_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_re_0_sq0 multiplier stage axi_fsk_demod_0/inst/s_lo_re_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_re_0_sq0__0 multiplier stage axi_fsk_demod_0/inst/s_lo_re_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_re_0_sq_reg multiplier stage axi_fsk_demod_0/inst/s_lo_re_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_0/inst/s_lo_re_0_sq_reg__0 multiplier stage axi_fsk_demod_0/inst/s_lo_re_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/mult0_reg multiplier stage axi_fsk_demod_1/inst/cmult_hi/mult0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multi0 multiplier stage axi_fsk_demod_1/inst/cmult_hi/multi0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multi0__0 multiplier stage axi_fsk_demod_1/inst/cmult_hi/multi0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multi_reg multiplier stage axi_fsk_demod_1/inst/cmult_hi/multi_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multi_reg__0 multiplier stage axi_fsk_demod_1/inst/cmult_hi/multi_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multr0 multiplier stage axi_fsk_demod_1/inst/cmult_hi/multr0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multr0__0 multiplier stage axi_fsk_demod_1/inst/cmult_hi/multr0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multr_reg multiplier stage axi_fsk_demod_1/inst/cmult_hi/multr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_hi/multr_reg__0 multiplier stage axi_fsk_demod_1/inst/cmult_hi/multr_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/mult0_reg multiplier stage axi_fsk_demod_1/inst/cmult_lo/mult0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multi0 multiplier stage axi_fsk_demod_1/inst/cmult_lo/multi0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multi0__0 multiplier stage axi_fsk_demod_1/inst/cmult_lo/multi0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multi_reg multiplier stage axi_fsk_demod_1/inst/cmult_lo/multi_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multi_reg__0 multiplier stage axi_fsk_demod_1/inst/cmult_lo/multi_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multr0 multiplier stage axi_fsk_demod_1/inst/cmult_lo/multr0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multr0__0 multiplier stage axi_fsk_demod_1/inst/cmult_lo/multr0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multr_reg multiplier stage axi_fsk_demod_1/inst/cmult_lo/multr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/cmult_lo/multr_reg__0 multiplier stage axi_fsk_demod_1/inst/cmult_lo/multr_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_im_0_sq0 multiplier stage axi_fsk_demod_1/inst/s_hi_im_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_im_0_sq0__0 multiplier stage axi_fsk_demod_1/inst/s_hi_im_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_im_0_sq_reg multiplier stage axi_fsk_demod_1/inst/s_hi_im_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_im_0_sq_reg__0 multiplier stage axi_fsk_demod_1/inst/s_hi_im_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_re_0_sq0 multiplier stage axi_fsk_demod_1/inst/s_hi_re_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_re_0_sq0__0 multiplier stage axi_fsk_demod_1/inst/s_hi_re_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_re_0_sq_reg multiplier stage axi_fsk_demod_1/inst/s_hi_re_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_hi_re_0_sq_reg__0 multiplier stage axi_fsk_demod_1/inst/s_hi_re_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_im_0_sq0 multiplier stage axi_fsk_demod_1/inst/s_lo_im_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_im_0_sq0__0 multiplier stage axi_fsk_demod_1/inst/s_lo_im_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_im_0_sq_reg multiplier stage axi_fsk_demod_1/inst/s_lo_im_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_im_0_sq_reg__0 multiplier stage axi_fsk_demod_1/inst/s_lo_im_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_re_0_sq0 multiplier stage axi_fsk_demod_1/inst/s_lo_re_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_re_0_sq0__0 multiplier stage axi_fsk_demod_1/inst/s_lo_re_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_re_0_sq_reg multiplier stage axi_fsk_demod_1/inst/s_lo_re_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_1/inst/s_lo_re_0_sq_reg__0 multiplier stage axi_fsk_demod_1/inst/s_lo_re_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/mult0_reg multiplier stage axi_fsk_demod_2/inst/cmult_hi/mult0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multi0 multiplier stage axi_fsk_demod_2/inst/cmult_hi/multi0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multi0__0 multiplier stage axi_fsk_demod_2/inst/cmult_hi/multi0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multi_reg multiplier stage axi_fsk_demod_2/inst/cmult_hi/multi_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multi_reg__0 multiplier stage axi_fsk_demod_2/inst/cmult_hi/multi_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multr0 multiplier stage axi_fsk_demod_2/inst/cmult_hi/multr0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multr0__0 multiplier stage axi_fsk_demod_2/inst/cmult_hi/multr0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multr_reg multiplier stage axi_fsk_demod_2/inst/cmult_hi/multr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_hi/multr_reg__0 multiplier stage axi_fsk_demod_2/inst/cmult_hi/multr_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/mult0_reg multiplier stage axi_fsk_demod_2/inst/cmult_lo/mult0_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multi0 multiplier stage axi_fsk_demod_2/inst/cmult_lo/multi0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multi0__0 multiplier stage axi_fsk_demod_2/inst/cmult_lo/multi0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multi_reg multiplier stage axi_fsk_demod_2/inst/cmult_lo/multi_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multi_reg__0 multiplier stage axi_fsk_demod_2/inst/cmult_lo/multi_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multr0 multiplier stage axi_fsk_demod_2/inst/cmult_lo/multr0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multr0__0 multiplier stage axi_fsk_demod_2/inst/cmult_lo/multr0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multr_reg multiplier stage axi_fsk_demod_2/inst/cmult_lo/multr_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/cmult_lo/multr_reg__0 multiplier stage axi_fsk_demod_2/inst/cmult_lo/multr_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_im_0_sq0 multiplier stage axi_fsk_demod_2/inst/s_hi_im_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_im_0_sq0__0 multiplier stage axi_fsk_demod_2/inst/s_hi_im_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_im_0_sq_reg multiplier stage axi_fsk_demod_2/inst/s_hi_im_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_im_0_sq_reg__0 multiplier stage axi_fsk_demod_2/inst/s_hi_im_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_re_0_sq0 multiplier stage axi_fsk_demod_2/inst/s_hi_re_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_re_0_sq0__0 multiplier stage axi_fsk_demod_2/inst/s_hi_re_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_re_0_sq_reg multiplier stage axi_fsk_demod_2/inst/s_hi_re_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_hi_re_0_sq_reg__0 multiplier stage axi_fsk_demod_2/inst/s_hi_re_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_im_0_sq0 multiplier stage axi_fsk_demod_2/inst/s_lo_im_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_im_0_sq0__0 multiplier stage axi_fsk_demod_2/inst/s_lo_im_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_im_0_sq_reg multiplier stage axi_fsk_demod_2/inst/s_lo_im_0_sq_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_im_0_sq_reg__0 multiplier stage axi_fsk_demod_2/inst/s_lo_im_0_sq_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_re_0_sq0 multiplier stage axi_fsk_demod_2/inst/s_lo_re_0_sq0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
WARNING: [DRC DPOP-2] MREG Output pipelining: DSP axi_fsk_demod_2/inst/s_lo_re_0_sq0__0 multiplier stage axi_fsk_demod_2/inst/s_lo_re_0_sq0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
INFO: [Common 17-14] Message 'DRC DPOP-2' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A1' of cell dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/temp_curid[31]_i_1 (pin dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/temp_curid[31]_i_1/I0) is not included in the LUT equation: 'O5=(A2*A3)+(A2*(~A3)*(~A5))+((~A2))'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A3' of cell dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.id_state[0]_i_1 (pin dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.id_state[0]_i_1/I0) is not included in the LUT equation: 'O6=(A6+~A6)*((A1))'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC PDCN-1569] LUT equation term check: Used physical LUT pin 'A4' of cell dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/temp_curid[31]_i_1 (pin dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/temp_curid[31]_i_1/I1) is not included in the LUT equation: 'O5=(A2*A3)+(A2*(~A3)*(~A5))+((~A2))'. If this cell is a user instantiated LUT in the design, please remove connectivity to the pin or change the equation and/or INIT string of the LUT to prevent this issue. If the cell is inferred or IP created LUT, please regenerate the IP and/or resynthesize the design to attempt to correct the issue.
WARNING: [DRC RTSTAT-10] No routable loads: 25 net(s) have no routable loads. The problem bus(es) and/or net(s) are dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_inst/TMS, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/aempty_fwft_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg[2:0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD1/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD7_CTL/ctl_reg_en_2[1], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_capture[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_drck[0], dbg_hub/inst/BSCANID.u_xsdbm_id/SWITCH_N_EXT_BSCAN.bscan_switch/m_bscan_runtest[0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.rd_rst_reg[0], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/rstblk/ngwrdrst.grst.wr_rst_reg[2], dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwhf.whf/overflow, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_RD/U_RD_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_rdfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gras.rsts/ram_empty_i, dbg_hub/inst/BSCANID.u_xsdbm_id/CORE_XSDB.UUT_MASTER/U_ICON_INTERFACE/U_CMD6_WR/U_WR_FIFO/SUBCORE_FIFO.xsdbm_v3_0_0_wrfifo_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.wr/gwas.wsts/ram_full_i... and (the first 15 of 23 listed).
INFO: [Vivado 12-3199] DRC finished with 0 Errors, 212 Warnings
INFO: [Vivado 12-3200] Please refer to the DRC report (report_drc) for more information.
INFO: [Designutils 20-2272] Running write_bitstream with 2 threads.
Loading data files...
Loading site data...
Loading route data...
Processing options...
Creating bitmap...
Creating bitstream...
Writing bitstream ./tdoa.bit...
INFO: [Vivado 12-1842] Bitgen Completed Successfully.
INFO: [Project 1-1876] WebTalk data collection is mandatory when using a ULT device. To see the specific WebTalk data collected for your design, open the usage_statistics_webtalk.html or usage_statistics_webtalk.xml file in the implementation directory.
INFO: [Common 17-83] Releasing license: Implementation
24 Infos, 176 Warnings, 0 Critical Warnings and 0 Errors encountered.
write_bitstream completed successfully
write_bitstream: Time (s): cpu = 00:00:32 ; elapsed = 00:00:40 . Memory (MB): peak = 2834.137 ; gain = 505.406 ; free physical = 542 ; free virtual = 1821
INFO: [Common 17-206] Exiting Vivado at Thu Apr 27 03:01:00 2023...
